# Write a Python function called max_num()to find the Max of three numbers.

def max_num(a,b,c):
    return max([a,b,c])

print(max_num(1,2,3))
print(max_num(260,456,654))
print(max_num(145,910,52))

# Write a Python function called mult_list()  to multiply all the numbers in a list.

def multiply(lst):
    if len(lst) == 0:
        return 0
    result = lst[0]

    # map through elements and multiply
    
    if len(lst) > 1:
        for i in lst[1:]:
            result = result * i

    return result
    
print(multiply([1,2,3]))
print(multiply([]))
print(multiply([15]))

# Check wether a number falls in a given range


def num_within(x,a,b):
    return x in range(a,b+1)
     
print(num_within(3,2,4))     
print(num_within(3,1,3))     
print(num_within(10,2,5))

#function called pascal() that prints out the first n rows of pascals triangle

triangle = [[1],[1,1]]
def pascal(n):
  #base case
  if n < 1:
    print("invalid number of rows")
  elif n == 1:
    print(triangle[0])
  else:
    row_number = 2
    #fill up correct number of rows in triangle
    while len(triangle) < n:
      row = []
      row_prev = triangle[row_number - 1]
      #create correct row, then add to triangle (this row will be 1 longer than row before it)
      length = len(row_prev)+1
      for i in range(length):
        #first number is 1
        if i == 0:
          row.append(1)
        #intermediate nunmbers get added from previous rows
        elif i > 0 and i < length-1:
          row.append(triangle[row_number-1][i-1]+triangle[row_number-1][i])
        #last number is 1
        else:
          row.append(1)
      triangle.append(row)
      row_number += 1

    #print triangle
    for row in triangle:
      print(row)
    
    
pascal(2)
print('     ')
pascal(5)